{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","Scroll","props","style","overflowY","border","height","children","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","response","json","users","this","filteredrobots","filter","toLowerCase","includes","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCQCQ,EAbF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GAEtB,OACI,yBAAKC,UAAU,uDACX,yBAAKC,IAAI,cAAcC,IAAG,+BAA0BH,EAA1B,cAC1B,6BACI,4BAAKF,GACL,2BAAIC,MCGLK,EATE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAIf,OAHkBA,EAAOC,KAAI,SAACC,EAAMC,GAChC,OAAO,kBAAC,EAAD,CAAMC,IAAKD,EAAGV,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,MAAOC,GAAIK,EAAOG,GAAGR,SCK1EU,EARA,SAACC,GACZ,OACI,yBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,mBAAoBC,OAAQ,UACjEJ,EAAMK,WCKJC,EARG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,yBAAKjB,UAAU,OACX,2BAAOA,UAAU,mCAAmCkB,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,MCmCrGI,E,kDAlCX,aAAe,IAAD,8BACV,gBAWJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAX1C,EAAKC,MAAQ,CACTxB,OAAQ,GACRqB,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBI,MAAM,8CAA8CvC,MAAK,SAAAwC,GAAQ,OAAIA,EAASC,UAAQzC,MAAK,SAAA0C,GAAU,EAAKR,SAAS,CAACpB,OAAQ4B,S,oBAOhI,WACI,MAAgCC,KAAKL,MAA7BxB,EAAR,EAAQA,OAAQqB,EAAhB,EAAgBA,YACVS,EAAiB9B,EAAO+B,QAAO,SAAC/B,GAClC,OAAOA,EAAOP,KAAKuC,cAAcC,SAASZ,EAAYW,kBAG1D,OACI,yBAAKpC,UAAU,MACX,2CACA,kBAAC,EAAD,CAAWiB,aAAcgB,KAAKX,iBAC9B,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUlB,OAAQ8B,U,GA5BpBI,IAAMC,WCExBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BzD,K","file":"static/js/main.b46b037a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Card = ({name,email,id}) => {\r\n    // const { name, email, id } = props;\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt=\"robofriends\" src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    const CardArray = robots.map((user, i) => {\r\n        return <Card key={i} name={robots[i].name} email={robots[i].email} id={robots[i].id}/>\r\n    })\r\n    return (\r\n        CardArray\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '5px solid black ', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='Search Robots' onChange={searchChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll.js';\r\nimport SearchBox from '../components/SearchBox'\r\n\r\nclass App extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => {this.setState({robots: users})});\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredrobots = robots.filter((robots) => {\r\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n\r\n        return (\r\n            <div className='tc'>\r\n                <h1>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <CardList robots={filteredrobots}/>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}